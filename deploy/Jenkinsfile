pipeline {
  agent any
  tools {
    maven "M3"
    jdk"JDK11"
  }
  environment {
        AWS_CREDENTIAL_NAME = "awsEcrCredentials"
        REGION = "ap-northeast-2"
        DOCKER_IMAGE_NAME="aws12-spring-petclinic"
        DOCKER_TAG="1.0"
        ECR_REPOSITORY = "${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-2.amazonaws.com"
        ECR_DOCKER_IMAGE = "${ECR_REPOSITORY}/${DOCKER_IMAGE_NAME}"
        ECR_DOCKER_TAG = "${DOCKER_TAG}"
  }
  
  stages {
    stage('Git fatch') {
      steps {
        echo 'Git fatch'
        git url: 'https://github.com/RB1123/spring-petclinic.git/',
          branch: 'main', credentialsId: 'gitCredential'
      }
    }
    stage('maven Build') {
      steps {
        echo 'maven Build'
        sh 'mvn -Dmaven.test.failure.ignore=true clean package'
      }
    }
    stage('Docker Image') {
      steps {
        echo 'Docker Image'
        dir("${env.WORKSPACE}") {
          sh 'docker build -t ${ECR_DOCKER_IMAGE}:${ECR_DOCKER_TAG} .'
        }
      }
    }
    stage('Image Push') {
      steps {
        echo 'Image Push'
        script{
          // cleanup current user docker credentials
          sh 'rm -f ~/.dockercfg ~/.docker/config.json || true'                    
                   
          docker.withRegistry("https://${ECR_REPOSITORY}", "ecr:${REGION}:${AWS_CREDENTIAL_NAME}") {
            docker.image("${ECR_DOCKER_IMAGE}:${ECR_DOCKER_TAG}").push()
          }
        }
      }
    }
    stage('Codedeploy Workload') {
      steps {
        echo 'codedeploy Workload'
      }
    }
  }
}
